api:
  # cachet url
  url: https://demo.cachethq.io/api/v1
  # cachet api token
  token: 9yMHsdioQosnyVK4iCVR
  insecure: false
# https://golang.org/src/time/format.go#L57
date_format: 02/01/2006 15:04:05 MST
monitors:
  # http monitor example
  - name: google
    # test url
    target: https://google.com
    # strict certificate checking for https
    strict: true
    # HTTP method
    method: POST

    # Set proxy for http connection
    proxy: http://proxy_host:3128
    
    # set to update component (either component_id or metric_id are required)
    component_id: 1
    
    # set to post to cachet metric (graph)
    metrics:
        response_time: [ 4, 5 ]

    # set to post lag to cachet metric (graph) - obsolete
    metric_id: 4

    # launch script depending on event (failed or successful check)
    on_success: /fullpath/shellhook_onsuccess.sh
    on_failure: /fullpath/shellhook_onfailure.sh

    # custom templates (see readme for details)
    template:
      investigating:
        subject: "{{ .Monitor.Name }} - {{ .SystemName }}"
        message: "{{ .Monitor.Name }} check **failed** (server time: {{ .now }})\n\n{{ .FailReason }}"
      fixed:
        subject: "I HAVE BEEN FIXED"
    
    # seconds between checks
    interval: 1
    # seconds for timeout
    timeout: 1

    # resync component data every x check
    resync: 60

    # If % of downtime is over this threshold, open an incident
    # threshold: 50
    history_size: 10
    threshold_critical: 80
    threshold_partial: 20

    # custom HTTP headers
    headers:
      Authorization: Basic <hash>
    # expected status code (either status code or body must be supplied)
    expected_status_code: 200
    # regex to match body
    expected_body: "P.*NG"

  # mock monitor example
  - name: mock
    
    # set to update component (either component_id or metric_id are required)
    component_id: 3

    # seconds between checks
    interval: 1

    type: mock

    shellhook:
        on_success: /fullpath/shellhook_onsuccess.sh

  # dns monitor example
  - name: dns
    # fqdn
    target: matej.me.
    # question type (A/AAAA/CNAME/...)
    question: mx
    type: dns
    # set component_id/metric_id
    component_id: 2
    # poll every 1s
    interval: 1
    timeout: 1
    # custom DNS server (defaults to system)
    dns: 8.8.4.4:53
    answers:
      - exact: 10 aspmx2.googlemail.com.
      - exact: 1 aspmx.l.google.com.
      - exact: 10 aspmx3.googlemail.com.